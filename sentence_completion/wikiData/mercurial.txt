This article is about the revision control software.  For the metallic element after which it is named, see Mercury (element).  For the unrelated corporation, see Mercurial Communications.  Mercurial     Developer(s) Matt Mackall   Initial release 19 April 2005; 10 years ago (2005-04-19)[1]   Stable release 3.3.3[2] / 1 April 2015; 23 days ago (2015-04-01)   Written in Python and C   Operating system Unix-like, MS Windows, Mac OS X   Type Revision control   License GNU GPL v2+   Website mercurial.selenic.com   Mercurial is a cross-platform, distributed revision control tool for software developers. It is mainly implemented using the Python programming language, but includes a binary diff implementation written in C. It is supported on MS Windows and Unix-like systems, such as FreeBSD, Mac OS X and Linux. Mercurial is primarily a command line program but graphical user interface extensions are available. All of Mercurial's operations are invoked as arguments to its driver program hg, a reference to the chemical symbol of the element mercury. Mercurial's major design goals include high performance and scalability, decentralized, fully distributed collaborative development, robust handling of both plain text and binary files, and advanced branching and merging capabilities, while remaining conceptually simple.[3] It includes an integrated web interface. Mercurial has also taken steps to ease the transition for SVN users. The creator and lead developer of Mercurial is Matt Mackall. Mercurial is released as free software under the terms of the GNU GPL v2 (or any later version[4]).    Contents   1 Technical information 2 History 3 Usage 4 Related software 5 Adoption  5.1 Source code hosting 5.2 Open source projects using Mercurial   6 See also 7 References 8 External links    Technical information[edit] Mercurial uses SHA-1 hashes to identify revisions. For repository access via a network, Mercurial uses an HTTP-based protocol that seeks to reduce round-trip requests, new connections and data transferred. Mercurial can also work over ssh where the protocol is very similar to the HTTP-based protocol. By default it uses a 3-way merge before calling external merge tools. History[edit] Mackall first announced Mercurial on 19 April 2005.[1] The impetus for this was the announcement earlier that month by Bitmover that they were withdrawing the free version of BitKeeper. BitKeeper had been used for the version control requirements of the Linux kernel project. Mackall decided to write a distributed version control system as a replacement for use with the Linux kernel. This project started a few days after another project called Git, initiated by Linus Torvalds with similar aims.[5] The Linux kernel project decided to use Git rather than Mercurial, but Mercurial is now used by many other projects (see below). "Git vs. Mercurial" has become one of the holy wars of hacker culture.[6] In an answer on the Mercurial mailing list, Matt Mackall explained how the name "Mercurial" was chosen:[7]  Shortly before the first release, I read an article about the ongoing Bitkeeper debacle that described Larry McVoy as mercurial (in the sense of 'fickle'). Given the multiple meanings, the convenient abbreviation, and the good fit with my pre-existing naming scheme (see my email address), it clicked instantly. Mercurial is thus named in Larry's honor. I do not know if the same is true of Git.  Usage[edit] Figure 1 shows some of the most important operations in Mercurial and their relations to Mercurial's concepts.     Figure 1: Some important operations of Mercurial and their relations.   Related software[edit]     Screenshot of hgk in action       Screenshot of TortoiseHg client history    GUI interfaces for Mercurial include:  TortoiseHg TortoiseHg is a cross-platform GUI for Mercurial. Most Mercurial operations can be invoked from the graphical interface. It can be used stand-alone on Windows, Mac OS X, or Linux.[8] It can also be integrated with Windows Explorer[9] and GNOME Nautilus.[10] On Windows, the TortoiseHg installer bundles Mercurial and Python, making it a complete environment. MacHg MacHg is a free and fast multithreaded front end for Mac OS X 10.6 and later.[11] SourceTree A freeware Mac OS X and Windows GUI client developed by Atlassian that works with both Mercurial and Git.[12] Hgk This was the original log viewer for Mercurial. It is implemented as a Mercurial extension with a tcl/tk frontend. It was originally based on a similar tool for Git called gitk. This viewer is now considered an unloved feature.[13] Recommended alternatives are hgview[14] or TortoiseHg. Murky A Mac OS X GUI in Objective-C 2.0, runs on Mac OS X 10.5 and later.[15] MacMercurial A Mac OS X GUI "not intended to completely replace command line use of Mercurial, only to ease the most common Mercurial operations," for Mac OS X 10.4 or later.[16] EasyMercurial A simple user interface for the Mercurial distributed version control system. It's free, open source, and cross-platform.[17] hgtui A free TUI client for Linux and Windows (using cygwin).[18]   Related tools for merging include (h)gct (Qt) and Meld.[19] The convert extension allows import from CVS, Darcs, Git, GNU Arch, Monotone, Perforce, Bazaar and Subversion repositories. Microsoft Visual Studio supports Mercurial with the VisualHG[20] and HgSccPackage[21] plugins. NetBeans supports Mercurial from Version 6. Eclipse supports Mercurial with the MercurialEclipse[22] plugin. GNU Emacs has support for Mercurial in its VC extension.  Adoption[edit] Although Mercurial was not selected to manage the Linux kernel sources, it has been adopted by several organizations, including Facebook,[23] the W3C, and Mozilla. Source code hosting[edit] See also: Comparison of source code hosting facilities The following websites provide free source code hosting for Mercurial repositories:  Bitbucket by Atlassian CodePlex by Microsoft[24] Codebase[25] JavaForge (with pull requests to control source code contribution) Project Kenai by Oracle SourceForge Assembla GNU Savannah by FSF Alioth by Debian BerliOS Kiln by Fog Creek Software Others[26]  Open source projects using Mercurial[edit] Some projects using the Mercurial distributed RCS:[27]   Adblock Plus[28] Adium CLISP Coin3D[29] Dovecot IMAP server[30] GNU Health GNU Multi-Precision Library GNU Octave Growl IcedTea Illumos[31] LEMON MoinMoin wiki software Mozilla[32] Mutt Nginx NetBeans[33] Ogre3D[34] OpenJDK[35] OpenIndiana[36] OSSEC Pidgin Python (programming language) SDL XEmacs   See also[edit]     Free software portal     Distributed revision control List of revision control software Comparison of revision control software  References[edit]   ^ a b Mackall, Matt (2005-04-20). "Mercurial v0.1 - a minimal scalable distributed SCM". Linux kernel (Mailing list).  ^ "What’s new", Mercurial (wiki) (3.3.3 ed.), Selenic . ^ Mackall, Matthew ‘Matt’ (2006), "Towards a Better SCM: Revlog and Mercurial" (PDF), Linux Symposium Proceedings (PDF)|format= requires |url= (help), Ottawa: Selenic . ^ "Relicensing", Mercurial (wiki), Selenic . ^ Mackall, Matt (2005-04-29). "Re: Mercurial 0.4b vs git patchbomb benchmark". Linux kernel (Mailing list).  ^ "Managing source code with Mercurial". Mercurial and Git fans are also happy to discuss the learning curve, merits, and usability of each VCS system's command set. Space prevents that discussion here, but a web search on that topic will provide lots of interesting reading material.  ^ Mackall, Matt (2012-02-15). "Why did Matt choose the name Mercurial?". Mercurial (Mailing list). Retrieved 8 March 2012.  ^ "Introduction". TortoiseHg Documentation. Retrieved 23 April 2014.  ^ "Windows Explorer Integration". TortoiseHg Documentation. Retrieved 23 April 2014.  ^ "GNOME desktop integration". TortoiseHg Documentation. Retrieved 23 April 2014.  ^ http://jasonfharris.com/machg/ ^ http://www.sourcetreeapp.com/ ^ "Hgk Extension". Mercurial Wiki. Retrieved 23 April 2014.  ^ http://www.logilab.org/project/hgview ^ http://bitbucket.org/snej/murky/wiki/Home ^ http://www.jwwalker.com/pages/macmerc.html ^ http://easyhg.org/ ^ https://code.google.com/p/hgtui/ ^ http://meld.sourceforge.net/ ^ http://visualhg.codeplex.com/ ^ http://bitbucket.org/zzsergant/hgsccpackage/ ^ http://www.javaforge.com/project/HGE ^ "Scaling Mercurial at Facebook".  ^ "CodePlex now supporting native Mercurial". CodePlex (Weblog). Microsoft. 2010-01-22.  ^ "Git, Mercurial & Subversion hosting". Features. Codebase HQ. 2013-03-04.  ^ "Hosting", Mercurial (wiki), Selenic . ^ "Some projects that use Mercurial", Mercurial (wiki), Selenic . ^ "Source", Adblock+ . ^ "Source code repositories migrated from Subversion to Mercurial". Coin3D (news). 2010-02-27.  ^ Sirainen, Timo (2007-05-19). "CVS to Mercurial switch". news (Mailing list) (Dovecot).  ^ "Mercurial Work Flow" (wiki). Illumos. 2011-03-13.  ^ Reed, J Paul (2007-04-12). "Version Control System Shootout Redux Redux".  ^ "Switch to hg.netbeans.org completed". Net beans. January 2008.  ^ "Mercurial". Developers. OGRE – Open Source 3D Graphics Engine. 2010-04-04.  ^ James Gosling (October 2006). Open Sourcing Sun's Java Platform Implementations, Part 1. Interview with Robert Eckstein. Sun.  ^ "Source Repositories". OpenIndiana. 2011-03-13.    External links[edit]  Official website O'Sullivan, Bryan (2009), Mercurial: The Definitive Guide (book), O'Reilly , freely available online "Mercurial: an alternative to git", LWN . An example-based Mercurial tutorial (PDF), SE: Jemander  covering both basic and advanced use "Mercurial", TechTalk (VIDEO)|format= requires |url= (help), Google  Java World, Sep 2007  Missing or empty |title= (help); |chapter= ignored (help). Spolsky, Joel, Mercurial tutorial . Mackall, Matt, "FLOSS Podcast", This week in Tech . List of projects using Mercurial from the Mercurial wiki          v t e   Revision control software        Years, where available, indicate the date of first stable release. Systems with names in italics are no longer maintained or have planned end-of-life dates.       Local only      Free/open-source     SCCS (1972) RCS (1982)          Proprietary     PVCS (1985) QVCS (1991)               Client–server      Free/open-source     CVS (1986, 1990 in C) CVSNT (1998) QVCS Enterprise (1998) Subversion (2000)          Proprietary     Software Change Manager (1970s) Panvalet (1970s) Endevor (1980s) DSEE (1984) Synergy (1990) ClearCase (1992) CMVC (1994) Visual SourceSafe (1994) Perforce (1995) StarTeam (1995) Integrity (2001) Surround SCM (2002) AccuRev SCM (2002) SourceAnywhere (2003) Vault (2003) Team Foundation Server (2005) Team Concert (2008)            Distributed      Free/open-source     GNU arch (2001) Darcs (2002) DCVS (2002) ArX (2003) Monotone (2003) SVK (2003) Codeville (2005) Bazaar (2005) Git (2005) Mercurial (2005) Fossil (2007) Veracity (2010)          Proprietary     TeamWare (1990s?) Code Co-op (1997) BitKeeper (1998) Plastic SCM (2006)            Concepts    Branch Fork Changeset Commit Interleaved deltas Delta compression Data comparison Merge Repository Tag Trunk            Category Comparison List            